version: 0.{build}
branches:
  only:
  - master
nuget:
  project_feed: true
configuration: Debug

environment:
  gh_token:
    secure: 5NfMTIHSZWCVv5fbAQroqXFDASFCQjRhL0XA61PGKdHJb88a8HrtftbA789/VdEh
  

build:
  project: appveyor-test2.sln
  verbosity: minimal

artifacts:
- path: test.zip 
  name: test
after_build_script:
 - cmd: 7z a test.zip %APPVEYOR_BUILD_FOLDER%\appveyor-test2\bin\*.*

deploy_script:
 - ps: |
    $token = $env:gh_token
    $uploadFilePath = "c:\projects\appveyor-test\test.zip"
    $releaseName = "v$env:appveyor_build_version"
    $repo = 'jfayre/appveyor-test'

    $headers = @{
      "Authorization" = "token $token"
      "Content-type" = "application/json"
    }

    $body = @{
      tag_name = $appveyor_repo_tag_name
      target_commitish = "master"
      name = $releaseName
      body = "Description of the release"
      draft = $false
      prerelease = $false
    }

    Write-Host "Creating release..." -NoNewline
    $json = (ConvertTo-Json $body)
    $release = Invoke-RestMethod -Uri "https://api.github.com/repos/$repo/releases" -Headers $headers -Method POST -Body $json
    $uploadUrl = $release.upload_url.Replace("{?name,label}", "") + "?name=" + [IO.Path]::GetFileName($uploadFilePath)
    Write-Host "OK" -ForegroundColor Green

    $uploadUrl

    Write-Host "Uploading asset..." -NoNewline
    $data = [System.IO.File]::ReadAllBytes($uploadFilePath)
    $wc = New-Object Net.WebClient
    $wc.Headers['Content-type'] = 'application/octet-stream'
    $wc.Headers['Authorization'] = "token $token"

    try {
      $response = $wc.UploadData($uploadUrl, "POST", $data)
      Write-Host "OK" -ForegroundColor Green
    } catch {
      $host.SetShouldExit(1)
    }

notifications:
- provider: Email
  to:
  - jfayre@gmail.com
  subject: TFM build
  on_build_success: true
  on_build_failure: true
